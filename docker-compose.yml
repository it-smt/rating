version: "3.8"

services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rating_network

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$DB_USER -d $$DB_NAME"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - ./.env-non-dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - rating_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - ./.env-non-dev
    networks:
      - rating_network

  migrations:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: migrations
    command: python manage.py migrate
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./.env-non-dev
    networks:
      - rating_network

  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: celery_beat
    command: celery -A rating beat --loglevel=info
    volumes:
      - ./backend:/app
    depends_on:
      redis:
        condition: service_started
      migrations:
        condition: service_completed_successfully
    env_file:
      - ./.env-non-dev
    networks:
      - rating_network

  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: flower
    command: celery -A rating flower --port=5555
    ports:
      - "5556:5555"
    volumes:
      - ./backend:/app
    depends_on:
      redis:
        condition: service_started
      # celery_worker:
      #   condition: service_started
    env_file:
      - ./.env-non-dev
    networks:
      - rating_network

  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: celery_worker
    command: celery -A rating worker --loglevel=info --pool=solo
    volumes:
      - ./backend:/app
    depends_on:
      redis:
        condition: service_started
      celery_beat:
        condition: service_started
      flower:
        condition: service_started
    env_file:
      - ./.env-non-dev
    networks:
      - rating_network

  web:
    build: ./frontend
    container_name: frontend
    ports:
      - "5173:5173"
    depends_on:
      backend:
        condition: service_started
    networks:
      - rating_network

volumes:
  redis_data:
  postgres_data:

networks:
  rating_network:
    driver: bridge
